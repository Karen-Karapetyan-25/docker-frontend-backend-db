name: build-scan-push
on:
  push:
    branches: [ master ]
  workflow_dispatch:

env:
  # Hard-coded for eu-west-1 â€” change only if you move to another region
  AWS_REGION: eu-west-1

  # AWS account-specific bits come from secrets so they never leak in logs
  ECR_REGISTRY: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.eu-west-1.amazonaws.com
  FRONTEND_REPO: ${{ secrets.ECR_REPO_FRONTEND }}   # e.g. frontend
  BACKEND_REPO:  ${{ secrets.ECR_REPO_BACKEND }}    # e.g. backend

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # ---------- AWS auth & ECR login ----------
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id:     ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region:            ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: ecr
        uses: aws-actions/amazon-ecr-login@v2

      # ---------- Build images ----------
      - name: Set image tags
        id: vars
        run: |
          SHA="${GITHUB_SHA::7}"
          REG="${{ steps.ecr.outputs.registry }}"            # already eu-west-1
          echo "FRONT_TAG=${REG}/${FRONTEND_REPO}:${SHA}" >> $GITHUB_OUTPUT
          echo "BACK_TAG=${REG}/${BACKEND_REPO}:${SHA}"  >> $GITHUB_OUTPUT

      - name: Build frontend image
        run: docker build -t ${{ steps.vars.outputs.FRONT_TAG }} ./frontend

      - name: Build backend image
        run: docker build -t ${{ steps.vars.outputs.BACK_TAG }} ./backend

      # ---------- Trivy scans (non-blocking) ----------
      - name: Scan frontend image with Trivy
        uses: aquasecurity/trivy-action@0.19.0
        with:
          image-ref:  ${{ steps.vars.outputs.FRONT_TAG }}
          exit-code: 0
          ignore-unfixed: true

      - name: Scan backend image with Trivy
        uses: aquasecurity/trivy-action@0.19.0
        with:
          image-ref:  ${{ steps.vars.outputs.BACK_TAG }}
          exit-code: 0
          ignore-unfixed: true

      # ---------- Push to ECR ----------
      - name: Push images to ECR
        run: |
          docker push ${{ steps.vars.outputs.FRONT_TAG }}
          docker push ${{ steps.vars.outputs.BACK_TAG }}
