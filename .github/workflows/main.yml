name: build-scan-push
on:
  push:
    branches: [ master ]
  workflow_dispatch:

env:
  # Hard-coded for eu-west-1
  AWS_REGION: eu-west-1

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
      # ---------- Checkout ----------
      - uses: actions/checkout@v4

      # ---------- AWS auth & ECR login ----------
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id:     ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region:            ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      # ---------- Build images ----------
      - name: Set image tags
        id: vars
        run: |
          SHA="${GITHUB_SHA::7}"
          echo "FRONT=383313560305.dkr.ecr.eu-west-1.amazonaws.com/frontend:${SHA}" >> "$GITHUB_OUTPUT"
          echo "BACK=383313560305.dkr.ecr.eu-west-1.amazonaws.com/backend:${SHA}"  >> "$GITHUB_OUTPUT"

      - name: Build frontend image
        run: docker build -t ${{ steps.vars.outputs.FRONT }} ./frontend

      - name: Build backend image
        run: docker build -t ${{ steps.vars.outputs.BACK }} ./backend

      # ---------- Trivy scans (non-blocking) ----------
      - name: Scan frontend image with Trivy
        uses: aquasecurity/trivy-action@0.19.0
        with:
          image-ref:       ${{ steps.vars.outputs.FRONT }}
          exit-code:       0
          ignore-unfixed:  true

      - name: Scan backend image with Trivy
        uses: aquasecurity/trivy-action@0.19.0
        with:
          image-ref:       ${{ steps.vars.outputs.BACK }}
          exit-code:       0
          ignore-unfixed:  true
          
      # ---------- Push to ECR ----------
      - name: Push images to ECR
        run: |
          docker push ${{ steps.vars.outputs.FRONT }}
          docker push ${{ steps.vars.outputs.BACK }}
